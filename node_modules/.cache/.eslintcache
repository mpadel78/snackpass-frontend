[{"/Users/manishpaudel/Projects/learning_MERN/snackpass/frontendsp/src/index.js":"1","/Users/manishpaudel/Projects/learning_MERN/snackpass/frontendsp/src/reportWebVitals.js":"2","/Users/manishpaudel/Projects/learning_MERN/snackpass/frontendsp/src/App.js":"3","/Users/manishpaudel/Projects/learning_MERN/snackpass/frontendsp/src/components/Header.js":"4"},{"size":500,"mtime":1645775138922,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1645775138923,"results":"7","hashOfConfig":"6"},{"size":4715,"mtime":1645854144896,"results":"8","hashOfConfig":"6"},{"size":378,"mtime":1645811484611,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6sk2ko",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/manishpaudel/Projects/learning_MERN/snackpass/frontendsp/src/index.js",[],[],"/Users/manishpaudel/Projects/learning_MERN/snackpass/frontendsp/src/reportWebVitals.js",[],[],"/Users/manishpaudel/Projects/learning_MERN/snackpass/frontendsp/src/App.js",["23","24"],[],"import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Grid,\n  SearchBar,\n  Chip,\n} from \"@material-ui/core\";\n\nimport \"./App.css\";\nimport Header from \"./components/Header\"; //the compoonent for header gets imported from components/header...\n\nconst baseURL = \"http://localhost:8000/getpopular\"; //base URL for API endpoint\n\nfunction App() {\n  const [info, setInfo] = React.useState(null);\n\n  React.useEffect(() => {\n    axios.get(baseURL).then((response) => {\n      setInfo(response.data);\n    });\n  }, []);\n\n  //function for searching the data\n\n  const requestSearch = (searchedVal) => {\n    const filteredRows = info.filter((row) => {\n      return row.Item_name.toLowerCase().includes(searchedVal.toLowerCase());\n    });\n\n    setInfo(filteredRows);\n  };\n\n  const cancelSearch = (searchedVal) => {\n    axios.get(baseURL).then((response) => {\n      setInfo(response.data);\n    });\n  };\n  console.log(info);\n\n  if (!info) return \"We are working at the moment\";\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <br />\n      <br />\n      <br />\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        //style={{ minHeight: \"100vh\" }}\n      >\n        <Grid item xs={12}>\n          <div\n            style={{\n              top: \"100vh\",\n              width: \"80vw\",\n              textAlign: \"center\",\n              marginTop: \"30px\",\n            }}\n          >\n            <form>\n              <input\n                type=\"text\"\n                placeholder=\"Search the popular products using their name!\"\n                name=\"search\"\n                autoFocus\n                style={{\n                  height: \"6vh\",\n                  width: \"80vw\",\n                  borderRadius: \"30x\",\n                  textAlign: \"center\",\n                  boxShadow: \"2px 2px 2px 2px #0078AE\",\n                }}\n                onChange={(event) => {\n                  event.target.value == \"\"\n                    ? cancelSearch(event.target.value)\n                    : requestSearch(event.target.value);\n                }}\n              ></input>{\" \"}\n            </form>{\" \"}\n          </div>{\" \"}\n        </Grid>{\" \"}\n        <Grid item xs={12}>\n          <Paper\n            style={{\n              width: \"80vw\",\n            }}\n          >\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell\n                      align=\"center\"\n                      style={{\n                        fontSize: \"20px\",\n                      }}\n                    >\n                      Name{\" \"}\n                    </TableCell>{\" \"}\n                    <TableCell\n                      align=\"center\"\n                      style={{\n                        fontSize: \"20px\",\n                      }}\n                    >\n                      Tags{\" \"}\n                    </TableCell>{\" \"}\n                  </TableRow>{\" \"}\n                </TableHead>\n                <TableBody>\n                  {\" \"}\n                  {info.map((res) => (\n                    <TableRow>\n                      <TableCell align=\"center\"> {res.Item_name} </TableCell>{\" \"}\n                      <TableCell align=\"center\">\n                        <Chip\n                          style={{\n                            backgroundColor: \"#00c8f7\",\n                            color: \"#ffffff\",\n                            marginRight: \"20px\",\n                          }}\n                          label={`${res.quantity} purchased recently`}\n                        ></Chip>\n                        <Chip\n                          style={{\n                            backgroundColor: \"#00c8f7\",\n                            color: \"#ffffff\",\n                          }}\n                          label={\n                            res.date_difference > 59\n                              ? `Recently purchased ${Math.round(\n                                  res.date_difference / 60\n                                )} hour ago`\n                              : `Recently purchased ${res.date_difference} minutes ago`\n                          }\n                        />{\" \"}\n                      </TableCell>{\" \"}\n                    </TableRow>\n                  ))}{\" \"}\n                </TableBody>{\" \"}\n              </Table>{\" \"}\n            </TableContainer>{\" \"}\n          </Paper>{\" \"}\n        </Grid>{\" \"}\n      </Grid>{\" \"}\n      <br />\n      <br />\n      <br />\n      <Chip\n        label=\"Made for Snackpass Interview by Manish Paudel\"\n        color=\"secondary\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/manishpaudel/Projects/learning_MERN/snackpass/frontendsp/src/components/Header.js",[],[],{"ruleId":"25","severity":1,"message":"26","line":12,"column":3,"nodeType":"27","messageId":"28","endLine":12,"endColumn":12},{"ruleId":"29","severity":1,"message":"30","line":84,"column":38,"nodeType":"31","messageId":"32","endLine":84,"endColumn":40},"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]